name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Input Validation
      run : echo "Input Validation"

      
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Save Secrets to File
      shell: bash
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        # SEC: CHEFADMIN
      run: |
        sudo echo "::set-env name=SEC::CHEFADMIN"
        echo "SEC=CHEFADMIN" >> $GITHUB_ENV

        echo "${{ secrets[format('{0}', env.SEC)] }}"


    # - name: Chef org user pem files upload
    #   run: |
    #     my_secrets=("CHEFADMIN" "TESTUSER")
    #     for sec in "${my_secrets[@]}"; do
    #       echo "$sec"
    #       echo "${{ secrets.${sec} }}"
    #     done
    #     a="echo '${{secrets.CHEFADMIN}}'"
    #     eval "$a"

    - name: Installing Workstation
      run: |
        wget https://packages.chef.io/files/stable/chef-workstation/23.12.1055/ubuntu/22.04/chef-workstation_23.12.1055-1_amd64.deb; sudo dpkg -i chef-workstation_23.12.1055-1_amd64.deb
        echo 'yes' | sudo chef env

    - name: Fetch Dev branch
      run: git fetch origin dev:dev

    - name: Metadata Check
      run: |
        git branch
        sudo chmod 777 .github/workflows/metadatacheck.sh
        sudo bash .github/workflows/metadatacheck.sh

    - name: Linting Check
      run: cookstyle

    - name: Kitchen
      run: | 
        kitchen verify
        kitchen destroy

    - name: Set up environment
      run: |
        echo "SECRET_NAMES=$(echo "${{ secrets }}" | jq -r 'keys_unsorted[]')" >> $GITHUB_ENV
        echo "${{ secrets }}"

    - name: Create Secret Files
      run: |
        # Specify the location to store files
        output_dir="/home/runner/.chef"

        # Create output directory if it doesn't exist
        mkdir -p "$output_dir"

        # Loop through each secret and create a file
        for secret_name in $SECRET_NAMES; do
          secret_value="${!secret_name}"
          echo "$secret_value" > "$output_dir/$secret_name.pem"
          echo "File created: $output_dir/$secret_name.pem"
        done
        ls -lhrt /home/runner/.chef

    - name: Setup Org
      run: | 
        sudo chmod 777 .github/workflows/setup_workstation.sh
        sudo ./.github/workflows/setup_workstation.sh "$ORG_DATA" "$CHEFADMIN" "$TESTUSER"
      env:
        ORG_DATA: ${{ vars.ORG_DETAILS }}
        CHEFADMIN: ${{ secrets.CHEFADMIN }}
        TESTUSER: ${{ secrets.TESTUSER }}

    - name: Set up Git
      run: |
        git config user.email "ankit.soni@progress.com"
        git config user.name "ankit100ni"

    - name: Merge Pull Request
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
      run: |
        git checkout dev
        git merge $GITHUB_REF --no-ff --no-edit
        git push origin main